# Cache
proxy_cache_path /etc/nginx/scache levels=1:2 keys_zone=static_cache:10m max_size=10g inactive=60m use_temp_path=off;
proxy_cache_path /etc/nginx/dcache levels=1:2 keys_zone=dynamic_cache:5m max_size=10g inactive=10m use_temp_path=off;

# Reverse Proxy: SSL allows phone connection over local network
# server {
#     listen 443;
#     listen [::]:443;
    
#     ssl_certificate     /etc/letsencrypt/live/localhost/${SSL_CERTIFICATE};
#     ssl_certificate_key /etc/letsencrypt/live/localhost/${SSL_PRIVATE_KEY};   

#     server_name *.localhost;
    
#     return 301 https://localhost$request_uri;
# }

# Serve app
server {
    listen 80;
    listen [::]:80;

    # listen 443 ssl http2;
    # listen [::]:443 ssl http2;
    
    # ssl_certificate     /etc/letsencrypt/live/localhost/${SSL_CERTIFICATE};
    # ssl_certificate_key /etc/letsencrypt/live/localhost/${SSL_PRIVATE_KEY};

    server_name ${SERVER} www.${SERVER};
    
    # Compression
    gzip on;
    gzip_static on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;

    # Game Server
    location /socket {
        access_log off;

        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header Host $http_host;
        # proxy_set_header X-NginX-Proxy false;

        proxy_pass http://${SOCKET};
        # proxy_redirect off;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Cache Policy
    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        access_log off;

        proxy_cache static_cache;
        expires 365d;
        proxy_cache_revalidate on;
        # proxy_cache_min_uses 3;
        # proxy_cache_use_stale error timeout updating http_500 http_502
        #                       http_503 http_504;
        # proxy_cache_background_update on;
        # proxy_cache_lock on;

        root /etc/nginx/data;
        try_files $uri @app;
    }

    # Serve small static content from root
    location / {
        proxy_cache dynamic_cache;
        root /etc/nginx/data;
        try_files $uri @app;
    }

    # App 
    location @app {
        proxy_pass http://${APP};
    }
}